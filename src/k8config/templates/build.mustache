apiVersion: batch/v1
kind: Job
metadata:
  labels:
    cykubed-job: "builder"
    project_id: "{{project.id}}"
    local_id: "{{local_id}}"
    testrun_id: "{{testrun_id}}"
    branch: "{{branch}}"
  name: "cykubed-build-{{project.name}}-{{testrun_id}}"
  namespace: "{{namespace}}"
spec:
  backoffLimit: 0
  ttlSecondsAfterFinished: 3600
  activeDeadlineSeconds: {{project.build_deadline}}
  template:
    spec:
      securityContext:
        runAsNonRoot: true
        fsGroup: 10000
        runAsUser: 10000
        runAsGroup: 10000
      serviceAccountName: "cykubed"
      volumes:
        - name: node-volume
          persistentVolumeClaim:
            claimName: "{{node_pvc_name}}"
{{#snapshot_name}}
            readOnly: true
{{/snapshot_name}}
        - name: build-volume
          persistentVolumeClaim:
            claimName: "{{build_pvc_name}}"
      restartPolicy: Never
      priorityClassName: "cykubed-low-priority"
      containers:
      - name: "cykubed-builder"
        image: "{{project.runner_image}}"
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ redis_secret_name }}"
              key: "redis-password"
        - name: BUILD_DIR
          value: "/build"
        - name: NODE_CACHE_DIR
          value: "/node"
        envFrom:
          - configMapRef:
              name: cykubed-agent-configmap
          - secretRef:
              name: cykubed-agent-secrets
        args: [ "build", "{{testrun_id}}"]
        resources:
          limits:
            cpu: "{{project.build_cpu}}"
            memory: "{{project.build_memory}}G"
            ephemeral-storage: "3Gi"
          requests:
            cpu: "{{project.build_cpu}}"
            memory: "{{project.build_memory}}G"
            ephemeral-storage: "3Gi"
        volumeMounts:
        - mountPath: "/node"
          name: node-volume
        - mountPath: "/build"
          name: build-volume
