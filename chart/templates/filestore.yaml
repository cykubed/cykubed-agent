apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}
  name: fs
  labels:
    app: fs
spec:
  ports:
  - port: 8100
    name: web
  clusterIP: None
  selector:
    app: fs
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fs-nginx-conf
  namespace: {{ .Release.Namespace }}
data:
  nginx.conf: |
    worker_processes  1;
    events {
        worker_connections  1024;
    }
    http {
      server {
          listen       80;
          server_name  localhost;

          location /api {
    	    proxy_pass http://localhost:8100/api;
    	    client_max_body_size 500M;
              proxy_http_version 1.1;
          }

          location / {
            root   /cache;
            client_max_body_size 200M;
          }
      }
    }
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: fs
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 3
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: fs
  serviceName: fs
  template:
    metadata:
      labels:
        app: fs
    spec:
      priorityClassName: cykube-high-priority
      serviceAccountName: cykube
      containers:
        - name: fs
          image: "nickbrookck/cykube-agent:{{ .Values.tag }}"
          args: ["fs"]
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
            limits:
              cpu: 200m
              memory: 200Mi
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            httpGet:
              port: 8100
              path: "/hc"
          env:
            - name: CACHE_DIR
              value: "/cache"
          envFrom:
            - configMapRef:
                name: cykube-agent-configmap
            - secretRef:
                name: cykube-agent-secrets
          volumeMounts:
          - name: cache
            mountPath: /cache
          ports:
            - containerPort: 8100
              name: fs
              protocol: TCP
        - name: nginx
          image: nginx
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
          ports:
          - containerPort: 80
            name: nginx-port
          volumeMounts:
          - name: nginx-conf
            mountPath: /etc/nginx
            readOnly: true
          - name: cache
            mountPath: /cache
      volumes:
        - name: nginx-conf
          configMap:
            name: fs-nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
  volumeClaimTemplates:
  - metadata:
      name: cache
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.cacheSize }}
