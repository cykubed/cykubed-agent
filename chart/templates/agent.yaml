{{- if eq .Values.platform "GKE" }}
apiVersion: snapshot.storage.k8s.io/v1
kind: VolumeSnapshotClass
metadata:
  name: "cykubed-snapshotclass"
  namespace: {{ .Release.Namespace }}
driver: pd.csi.storage.gke.io
deletionPolicy: Delete
---
allowVolumeExpansion: false
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    k8s-app: gcp-compute-persistent-disk-csi-driver
  name: cykubed-storageclass
  namespace: {{ .Release.Namespace }}
parameters:
  type: pd-ssd
provisioner: pd.csi.storage.gke.io
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
---
{{- end }}

{{- if eq .Values.platform "minikube" }}
apiVersion: snapshot.storage.k8s.io/v1
deletionPolicy: Delete
driver: hostpath.csi.k8s.io
kind: VolumeSnapshotClass
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: cykubed-snapshotclass
  namespace: {{ .Release.Namespace }}
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: cykubed-storageclass
  namespace: {{ .Release.Namespace }}
provisioner: hostpath.csi.k8s.io
reclaimPolicy: Delete
volumeBindingMode: Immediate
---
{{- end }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: agent
  namespace: {{ .Release.Namespace }}
spec:
{{- if eq .Values.architecture "standalone" }}
  replicas: 1
{{ else }}
  replicas: {{ .Values.replicas }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
{{- end }}
  serviceName: agent
  selector:
    matchLabels:
      app: agent
  template:
    metadata:
      labels:
        app: agent
    spec:
      priorityClassName: cykubed-high-priority
      serviceAccountName: cykubed
      securityContext:
        runAsUser: 10000
        runAsGroup: 10000
        fsGroup: 10000
      containers:
        - name: agent
          image: "europe-docker.pkg.dev/cykubeapp/cykubed/agent:{{ .Values.tag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          resources:
            requests:
              cpu: 150m
              memory: 200Mi
            limits:
              cpu: 150m
              memory: 200Mi
          startupProbe:
            exec:
              command:
                - cat
                - /tmp/cykubed-live
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 30
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-redis"
                  key: "redis-password"
          envFrom:
            - configMapRef:
                name: cykubed-agent-configmap
            - secretRef:
                name: cykubed-agent-secrets


