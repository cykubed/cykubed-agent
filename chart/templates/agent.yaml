{{ required "A valid token is required" .Values.token }}
{{ required "Please specifiy the target platform" .Values.platform }}

{{ if eq .Values.platform "GKE" }}
apiVersion: snapshot.storage.k8s.io/v1
kind: VolumeSnapshotClass
metadata:
  name: cykubed-snapshotclass
  namespace: cykubed
driver: pd.csi.storage.gke.io
deletionPolicy: Delete
---
allowVolumeExpansion: true
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    k8s-app: gcp-compute-persistent-disk-csi-driver
  name: cykubed-storageclass
parameters:
  type: pd-ssd
provisioner: pd.csi.storage.gke.io
reclaimPolicy: Delete
volumeBindingMode: Immediate
---
{{ end }}


{{ if eq .Values.platform | lower "minikube" }}
apiVersion: snapshot.storage.k8s.io/v1
deletionPolicy: Delete
driver: hostpath.csi.k8s.io
kind: VolumeSnapshotClass
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: cykubed-snapshotclass
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: cykubed-storageclass
provisioner: hostpath.csi.k8s.io
reclaimPolicy: Delete
volumeBindingMode: Immediate
---
{{ end }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: agent
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicas }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  serviceName: agent
  selector:
    matchLabels:
      app: agent
  template:
    metadata:
      labels:
        app: agent
    spec:
      priorityClassName: cykubed-high-priority
      serviceAccountName: cykubed
      securityContext:
        runAsUser: 10000
        runAsGroup: 10000
        fsGroup: 10000
      containers:
        - name: agent
          image: "europe-west2-docker.pkg.dev/cykubeapp/cykube/agent:{{ .Values.tag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          resources:
            requests:
              cpu: 150m
              memory: 200Mi
            limits:
              cpu: 150m
              memory: 200Mi
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "cykubed-redis"
                  key: "redis-password"
            - name: PLATFORM
              value: {{ .Values.platform }}
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: STORAGE_CLASS
              value: cykubed-storageclass
          envFrom:
            - configMapRef:
                name: cykubed-agent-configmap
            - secretRef:
                name: cykubed-agent-secrets


