apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cykube-cache
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.cacheStorage }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ .Release.Name }}-configmap
data:
  API_TOKEN: {{ .Values.token }}
  CACHE_URL: "http://cache"
  HUB_URL: "http://cykube:5000"
  JOB_MODE: "k8"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cykube-ws
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: cykube-ws
  template:
    metadata:
      labels:
        app: cykube-ws
    spec:
      containers:
        - name: cykube-ws
          image: "cykube/agent:{{ .Values.agentVersion }}"
          command: ["python"]
          args: ["./ws.py"]
          imagePullPolicy: IfNotPresent
          envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-configmap

---
apiVersion: v1
kind: ServiceAccount
metadata:
 name: cykube
 namespace: {{ .Values.namespace }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: {{ .Values.namespace }}
data:
  nginx.conf: |
    worker_processes  1;
    events {
        worker_connections  1024;
    }
    http {
      server {
          listen       80;
          server_name  localhost;
          location / {
            root   /var/lib/cykubecache;
            client_max_body_size 200M;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cykube-server
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cykube-server
  template:
    metadata:
      labels:
        app: cykube-server
    spec:
      serviceAccountName: cykube
      containers:
        - name: server
          image: "cykube/agent:{{ .Values.agentVersion }}"
          command: [ "uvicorn" ]
          args: ["main:app", "--port", "5000", "--host", "0.0.0.0"]
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-configmap
          ports:
            - containerPort: 5000
              name: cykube-server
          readinessProbe:
            httpGet:
              path: /hc
              port: cykube-server
          volumeMounts:
            - name: cykube-cache
              mountPath: /var/lib/cykubecache

        - name: nginx
          image: nginx
          ports:
          - containerPort: 80
            name: nginx-port
          volumeMounts:
          - name: nginx-conf
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
            readOnly: true
          - name: cykube-cache
            readOnly: true
            mountPath: /var/lib/cykubecache

      volumes:
        - name: cykube-cache
          persistentVolumeClaim:
            claimName: cykube-cache
        - name: nginx-conf
          configMap:
            name: nginx-conf
---
apiVersion: v1
kind: Service
metadata:
  name: cykube
  namespace: {{ .Values.namespace }}
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: cykube-server
  selector:
    app: cykube-server
---
apiVersion: v1
kind: Service
metadata:
  name: cache
  namespace: {{ .Values.namespace }}
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: nginx-port
  selector:
    app: cykube-server
